package mathhelper.games.matify.payloads

import org.json.JSONObject

enum class TaskField(val str: String) {
    NAMESPACE_CODE("namespaceCode"),
    CODE("code"),
    NAME_EN("nameEn"),
    NAME_RU("nameRu"),
    SUBJECT_TYPES("subjectTypes"),
    ORIGINAL_EXPRESSION_STRUCTURE_STRING("originalExpressionStructureString"),
    ORIGINAL_EXPRESSION_TEX("originalExpressionTex"),
    ORIGINAL_EXPRESSION_PLAIN_TEXT("originalExpressionPlainText"),
    GOAL_TYPE("goalType"),
    GOAL_EXPRESSION_STRUCTURE_STRING("goalExpressionStructureString"),
    GOAL_EXPRESSION_TEX("goalExpressionTex"),
    GOAL_EXPRESSION_PLAIN_TEXT("goalExpressionPlainText"),
    GOAL_PATTERN("goalPattern"),
    GOAL_NUMBER_PROPERTY("goalNumberProperty"),
    RULE_PACKS("rulePacks"),
    STEPS_NUMBER("stepsNumber"),
    TIME("time"),
    DIFFICULTY("difficulty"),
    SOLUTION("solution"),
    COUNT_OF_AUTO_GENERATED_TASKS("countOfAutoGeneratedTasks"),
    OPERATIONS("operations"),
    STEPS_COUNT_INTERVALS("stepsCountIntervals"),
    IMPLICIT_TRANSFORMATIONS_COUNT("implicitTransformationsCount"),
    AUTO_GENERATED_RULE_PACKS("autoGeneratedRulePacks"),
    LIGHT_WEIGHT_OPERATIONS("lightWeightOperations"),
    NULL_WEIGHT_OPERATIONS("nullWeightOperations"),
    MAX_NUMBER_OF_AUTO_GENERATED_TASKS("maxNumberOfAutoGeneratedTasks"),
    NUMBER_OF_AUTO_GENERATED_TASKS_TO_SOLVE("numberOfAutoGeneratedTasksToSolve"),
    OTHER_GOAL_DATA("otherGoalData"),
    OTHER_CHECK_SOLUTION_DATA("otherCheckSolutionData"),
    OTHER_AWARD_DATA("otherAwardData"),
    OTHER_AUTO_GENERATION_DATA("otherAutoGenerationData"),
    OTHER_DATA("otherData")
}

data class Task(
    val namespaceCode: String,
    val code: String
) {
    companion object {
        fun create(taskJson: JSONObject): Task? {
            return null
        }
    }
}