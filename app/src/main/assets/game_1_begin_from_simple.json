{
  "gameSpace": "",
  "gameCode": "begin_from_simple",
  "name": "Начни с простого (Микс)",
  "en": "Begin from simple",
  "ru": "Начни с простого (Микс)",
  "version": 10,
  "levels": [
    {
      "levelCode": "begin_from_simple__Level_00_Compute",
      "name": "Несокращенная дробь",
      "ru": "Несокращенная дробь",
      "en": "Uncanceled fraction",
      "difficulty": 1.0,
      "type": "algebra",
      "stepsNum": 1,
      "time": 70,
      "originalExpression": "(/(96;16))",
      "finalExpression": "Сократить дробь",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_01_Compute",
      "name": "Невычисленный корень",
      "ru": "Невычисленный корень",
      "en": "Uncalculated root",
      "difficulty": 2.0,
      "type": "algebra",
      "stepsNum": 2,
      "time": 100,
      "originalExpression": "(^(27;/(1;3)))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_02_Compute",
      "name": "Разность квадратов",
      "ru": "Разность квадратов",
      "en": "Difference of squares",
      "difficulty": 3.0,
      "type": "algebra",
      "stepsNum": 3,
      "time": 120,
      "originalExpression": "(+(^(64;2);-(^(36;2))))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_03_Compute",
      "name": "Квадрат разности",
      "ru": "Квадрат разности",
      "en": "Square of difference",
      "difficulty": 2.0,
      "type": "algebra",
      "stepsNum": 4,
      "time": 120,
      "originalExpression": "(+(^(23;2);-(*(2;23;3));9))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_04_Compute",
      "name": "Догадайся 1",
      "ru": "Догадайся 1",
      "en": "Guess 1",
      "difficulty": 3.0,
      "type": "algebra",
      "stepsNum": 5,
      "time": 120,
      "originalExpression": "(+(16;*(2;64);^(16;2)))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_05_Compute",
      "name": "Догадайся 2",
      "ru": "Догадайся 2",
      "en": "Guess 2",
      "difficulty": 3.0,
      "type": "algebra",
      "stepsNum": 7,
      "time": 120,
      "originalExpression": "(^(+(^(65;2);-(^(56;2)));0.5))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_06_Compute",
      "name": "Cумма кубов",
      "ru": "Сумма кубов",
      "en": "Sum of cubes",
      "difficulty": 4.0,
      "type": "algebra",
      "stepsNum": 6,
      "time": 180,
      "originalExpression": "(+(^(8;3);^(12;3)))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_07_Compute",
      "name": "Разность кубов",
      "ru": "Разность кубов",
      "en": "Difference cubes",
      "difficulty": 4.0,
      "type": "algebra",
      "stepsNum": 6,
      "time": 180,
      "originalExpression": "(+(^(8;3);-(^(6;3))))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_08_Compute",
      "name": "Куб суммы",
      "ru": "Куб суммы",
      "en": "Sum cube",
      "difficulty": 4.0,
      "type": "algebra",
      "stepsNum": 7,
      "time": 200,
      "originalExpression": "(+(8;*(3;32);*(3;2;64);^(8;3)))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_09_Compute",
      "name": "Догадайся 3",
      "ru": "Догадайся 3",
      "en": "Guess 3",
      "difficulty": 5.0,
      "type": "algebra",
      "stepsNum": 9,
      "time": 300,
      "originalExpression": "(+(*(+(4;53);+(16;-(*(4;53));^(53;2)));*(+(4;-(53));+(^(4;2);*(4;53);^(53;2)))))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_10_Compute",
      "name": "Догадайся 4",
      "ru": "Догадайся 4",
      "en": "Guess 4",
      "difficulty": 6.0,
      "type": "algebra",
      "stepsNum": 16,
      "time": 500,
      "originalExpression": "(^(+(^(26;3);1;*(27;+(-(+(^(26;2);-(26))))));/(1;3)))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_11_Compute",
      "name": "Логарифм",
      "ru": "Логарифм",
      "en": "Logarithm",
      "difficulty": 3.0,
      "type": "algebra",
      "stepsNum": 2,
      "time": 150,
      "originalExpression": "(*(3;^(3;log(9;3))))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_12_Compute",
      "name": "Разность логарифмов",
      "ru": "Разность логарифмов",
      "en": "Difference of logarithms",
      "difficulty": 4.0,
      "type": "algebra",
      "stepsNum": 3,
      "time": 180,
      "originalExpression": "(+(log(72;3);-(log(8;3))))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_13_Compute",
      "name": "Частное логарифмов",
      "ru": "Частное логарифмов",
      "en": "Quotient of logarithms",
      "difficulty": 4.0,
      "type": "algebra",
      "stepsNum": 2,
      "time": 150,
      "originalExpression": "(/(log(81;27);log(9;27)))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_14_Compute",
      "name": "Догадайся 5",
      "ru": "Догадайся 5",
      "en": "Guess 5",
      "difficulty": 6.0,
      "type": "algebra",
      "stepsNum": 5,
      "time": 250,
      "originalExpression": "(/(log(36;3);+(2;log(4;3))))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    },
    {
      "levelCode": "begin_from_simple__Level_15_Compute",
      "name": "Догадайся 6",
      "ru": "Догадайся 6",
      "en": "Guess 6",
      "difficulty": 5.0,
      "type": "algebra",
      "stepsNum": 5,
      "time": 250,
      "originalExpression": "(/(^(16;log(32;4));^(16;log(2;4))))",
      "finalExpression": "Вычислить",
      "finalPattern": "?:0:?:?N",
      "rules": [
        {
          "rulePack": "MathBase"
        }
      ]
    }
  ],
  "rulePacks": [
    {
      "name": "MathBase",
      "rules": [
        {
          "rulePack": "ComputationRules"
        },
        {
          "rulePack": "ArithmeticСommutativity"
        },
        {
          "rulePack": "ArithmeticMinus"
        },
        {
          "rulePack": "BaseDigits"
        },
        {
          "rulePack": "ArithmeticAssociativity"
        },
        {
          "rulePack": "AdditiveToMultiplicative"
        },
        {
          "rulePack": "ArithmeticDegree"
        },
        {
          "rulePack": "ShortMultiplication"
        },
        {
          "rulePack": "Logarithm"
        },
        {
          "rulePack": "ArithmeticPlusSelections"
        },
        {
          "code": "SimpleComputation",
          "priority": 5
        },
        {
          "code": "ZeroComputation",
          "priority": 5
        },
        {
          "code": "NumberPlusMinus1",
          "priority": 20
        },
        {
          "code": "MultiplicationFactorization",
          "priority": 15
        },
        {
          "code": "DecimalToFraction",
          "priority": 15
        },
        {
          "code": "PowFactorization",
          "priority": 15
        }
      ]
    },
    {
      "name": "BaseDigits",
      "type": "algebra",
      "rules": [
        {
          "left": "(+(a))",
          "right": "(a)"
        },
        {
          "left": "(+(a;+(b)))",
          "right": "(+(a;b))"
        },
        {
          "left": "(+(+(a);b))",
          "right": "(+(a;b))"
        },
        {
          "left": "(+(a;a))",
          "right": "(*(2;a))"
        },
        {
          "left": "(+(a;+(a)))",
          "right": "(*(2;a))"
        },
        {
          "left": "(+(+(a);a))",
          "right": "(*(2;a))"
        },
        {
          "left": "(*(2;a))",
          "right": "(+(a;a))"
        },
        {
          "left": "(+(a;a;a))",
          "right": "(*(3;a))"
        },
        {
          "left": "(+(a;*(2;a)))",
          "right": "(*(3;a))"
        },
        {
          "left": "(+(*(2;a);a))",
          "right": "(*(3;a))"
        },
        {
          "left": "(*(3;a))",
          "right": "(+(a;*(2;a)))"
        },
        {
          "left": "(+(a;*(3;a)))",
          "right": "(*(4;a))"
        },
        {
          "left": "(+(*(3;a);a))",
          "right": "(*(4;a))"
        },
        {
          "left": "(+(*(2;a);*(2;a)))",
          "right": "(*(4;a))"
        },
        {
          "left": "(*(4;a))",
          "right": "(+(a;*(3;a)))"
        },
        {
          "left": "(+(a;0))",
          "right": "(a)"
        },
        {
          "left": "(+(0;a))",
          "right": "(a)"
        },
        {
          "left": "(a)",
          "right": "(+(a;0))"
        },
        {
          "left": "(*(a;0))",
          "right": "(0)"
        },
        {
          "left": "(*(0;a))",
          "right": "(0)"
        },
        {
          "left": "(/(0;a))",
          "right": "(0)"
        },
        {
          "left": "(*(a;1))",
          "right": "(a)"
        },
        {
          "left": "(*(1;a))",
          "right": "(a)"
        },
        {
          "left": "(/(a;1))",
          "right": "(a)"
        },
        {
          "left": "(/(a;a))",
          "right": "(1)"
        },
        {
          "left": "(a)",
          "right": "(*(a;1))"
        },
        {
          "left": "(a)",
          "right": "(/(1;/(1;a)))"
        },
        {
          "left": "(/(1;/(1;a)))",
          "right": "(a)"
        },
        {
          "left": "(+(-(+(-(a)))))",
          "right": "(a)"
        },
        {
          "left": "(-(+(-(a))))",
          "right": "(a)"
        },
        {
          "left": "(a)",
          "right": "(-(+(-(a))))"
        },
        {
          "left": "(+(1;1))",
          "right": "(2)"
        },
        {
          "left": "(2)",
          "right": "(+(1;1))"
        },
        {
          "left": "(+(1;2))",
          "right": "(3)"
        },
        {
          "left": "(3)",
          "right": "(+(1;2))"
        },
        {
          "left": "(*(1;1))",
          "right": "(1)"
        },
        {
          "left": "(1)",
          "right": "(*(1;1))"
        },
        {
          "left": "(0.5)",
          "right": "(/(1;2))"
        },
        {
          "left": "(/(1;2))",
          "right": "(0.5)"
        }
      ]
    },
    {
      "name": "ComputationRules",
      "type": "algebra",
      "rules": [
        {
          "rulePack": "PowRules"
        }
      ]
    },
    {
      "name": "PowRules",
      "type": "algebra",
      "rules": [
        {
          "left": "(1024)",
          "right": "(^(2;10))"
        },
        {
          "left": "(625)",
          "right": "(^(5;4))"
        },
        {
          "left": "(512)",
          "right": "(^(2;9))"
        },
        {
          "left": "(256)",
          "right": "(^(2;8))"
        },
        {
          "left": "(256)",
          "right": "(^(4;4))"
        },
        {
          "left": "(243)",
          "right": "(^(3;5))"
        },
        {
          "left": "(169)",
          "right": "(^(13;2))"
        },
        {
          "left": "(144)",
          "right": "(^(12;2))"
        },
        {
          "left": "(128)",
          "right": "(^(2;7))"
        },
        {
          "left": "(125)",
          "right": "(^(5;3))"
        },
        {
          "left": "(121)",
          "right": "(^(11;2))"
        },
        {
          "left": "(100)",
          "right": "(^(10;2))"
        },
        {
          "left": "(81)",
          "right": "(^(9;2))"
        },
        {
          "left": "(64)",
          "right": "(^(8;2))"
        },
        {
          "left": "(64)",
          "right": "(^(4;3))"
        },
        {
          "left": "(64)",
          "right": "(^(2;6))"
        },
        {
          "left": "(49)",
          "right": "(^(7;2))"
        },
        {
          "left": "(36)",
          "right": "(^(6;2))"
        },
        {
          "left": "(32)",
          "right": "(^(2;5))"
        },
        {
          "left": "(27)",
          "right": "(^(3;3))"
        },
        {
          "left": "(25)",
          "right": "(^(5;2))"
        },
        {
          "left": "(16)",
          "right": "(^(4;2))"
        },
        {
          "left": "(16)",
          "right": "(^(2;4))"
        },
        {
          "left": "(9)",
          "right": "(^(3;2))"
        },
        {
          "left": "(8)",
          "right": "(^(2;3))"
        },
        {
          "left": "(4)",
          "right": "(^(2;2))"
        },
        {
          "left": "(1)",
          "right": "(^(1;2))"
        },
        {
          "left": "(1)",
          "right": "(^(1;3))"
        }
      ]
    },
    {
      "name": "ArithmeticСommutativity",
      "type": "algebra",
      "rules": [
        {
          "rulePack": "ArithmeticAdditionalСommutativity"
        },
        {
          "rulePack": "ArithmeticMultiplicativeСommutativity"
        }
      ]
    },
    {
      "name": "ArithmeticAdditionalСommutativity",
      "type": "algebra",
      "rules": [
        {
          "left": "(+(a;b))",
          "right": "(+(b;a))"
        },
        {
          "left": "(+(A;+(B;C)))",
          "right": "(+(A;B;C))"
        },
        {
          "left": "(+(A;B;C))",
          "right": "(+(A;+(B;C)))"
        },
        {
          "left": "(+(A;+(B;C)))",
          "right": "(+(+(A;B);C))"
        },
        {
          "left": "(+(+(A;B);C))",
          "right": "(+(A;+(B;C)))"
        },
        {
          "left": "(+(+(A;B);C))",
          "right": "(+(A;B;C))"
        },
        {
          "left": "(+(A;B;C))",
          "right": "(+(+(A;B);C))"
        },
        {
          "left": "(+(A;B;C))",
          "right": "(+(A;C;B))"
        },
        {
          "left": "(+(A;B;C))",
          "right": "(+(B;A;C))"
        },
        {
          "left": "(+(A;B;C))",
          "right": "(+(C;A;B))"
        },
        {
          "left": "(+(+(A;B);+(C;D)))",
          "right": "(+(A;B;C;D))"
        },
        {
          "left": "(+(A;+(B;C;D)))",
          "right": "(+(A;B;C;D))"
        },
        {
          "left": "(+(A;B;C;D))",
          "right": "(+(A;+(B;C;D)))"
        },
        {
          "left": "(+(+(A;B;C);D))",
          "right": "(+(A;B;C;D))"
        },
        {
          "left": "(+(A;B;C;D))",
          "right": "(+(+(A;B;C);D))"
        },
        {
          "left": "(+(A;B;+(C;D)))",
          "right": "(+(A;B;C;D))"
        },
        {
          "left": "(+(A;B;C;D))",
          "right": "(+(A;B;+(C;D)))"
        },
        {
          "left": "(+(A;+(B;C);D))",
          "right": "(+(A;B;C;D))"
        },
        {
          "left": "(+(A;B;C;D))",
          "right": "(+(A;+(B;C);D))"
        },
        {
          "left": "(+(+(A;B);C;D))",
          "right": "(+(A;B;C;D))"
        },
        {
          "left": "(+(A;B;C;D))",
          "right": "(+(+(A;B);C;D))"
        },
        {
          "left": "(+(A;B;C;D))",
          "right": "(+(B;A;C;D))"
        },
        {
          "left": "(+(A;B;C;D))",
          "right": "(+(C;A;B;D))"
        },
        {
          "left": "(+(A;B;C;D))",
          "right": "(+(D;A;B;C))"
        },
        {
          "left": "(+(A;+(B;C;D;E)))",
          "right": "(+(A;B;C;D;E))"
        },
        {
          "left": "(+(A;B;C;D;E))",
          "right": "(+(A;+(B;C;D;E)))"
        },
        {
          "left": "(+(+(A;B;C;D);E))",
          "right": "(+(A;B;C;D;E))"
        },
        {
          "left": "(+(A;B;C;D;E))",
          "right": "(+(+(A;B;C;D);E))"
        },
        {
          "left": "(+(A;B;C;D;E))",
          "right": "(+(B;A;C;D;E))"
        },
        {
          "left": "(+(A;B;C;D;E))",
          "right": "(+(C;A;B;D;E))"
        },
        {
          "left": "(+(A;B;C;D;E))",
          "right": "(+(D;A;B;C;E))"
        },
        {
          "left": "(+(A;B;C;D;E))",
          "right": "(+(E;A;B;C;D))"
        }
      ]
    },
    {
      "name": "ArithmeticPlusSelections",
      "type": "algebra",
      "rules": [
        {
          "left": "(+(a;b))",
          "right": "(+(a;+(b)))"
        },
        {
          "left": "(+(a;b))",
          "right": "(+(+(a);b))"
        },
        {
          "left": "(+(a;b;c))",
          "right": "(+(+(a);b;c))"
        },
        {
          "left": "(+(a;b;c))",
          "right": "(+(a;+(b);c))"
        },
        {
          "left": "(+(a;b;c))",
          "right": "(+(a;b;+(c)))"
        },
        {
          "left": "(+(a;b;c;d))",
          "right": "(+(+(a);b;c;d))"
        },
        {
          "left": "(+(a;b;c;d))",
          "right": "(+(a;+(b);c;d))"
        },
        {
          "left": "(+(a;b;c;d))",
          "right": "(+(a;b;+(c);d))"
        },
        {
          "left": "(+(a;b;c;d))",
          "right": "(+(a;b;c;+(d)))"
        },
        {
          "left": "(+(a;b;c;d;e))",
          "right": "(+(+(a);b;c;d;e))"
        },
        {
          "left": "(+(a;b;c;d;e))",
          "right": "(+(a;+(b);c;d;e))"
        },
        {
          "left": "(+(a;b;c;d;e))",
          "right": "(+(a;b;+(c);d;e))"
        },
        {
          "left": "(+(a;b;c;d;e))",
          "right": "(+(a;b;c;+(d);e))"
        },
        {
          "left": "(+(a;b;c;d;e))",
          "right": "(+(a;b;c;d;+(e)))"
        },
        {
          "right": "(+(a;b))",
          "left": "(+(a;+(b)))"
        },
        {
          "right": "(+(a;b))",
          "left": "(+(+(a);b))"
        },
        {
          "right": "(+(a;b;c))",
          "left": "(+(+(a);b;c))"
        },
        {
          "right": "(+(a;b;c))",
          "left": "(+(a;+(b);c))"
        },
        {
          "right": "(+(a;b;c))",
          "left": "(+(a;b;+(c)))"
        },
        {
          "right": "(+(a;b;c;d))",
          "left": "(+(+(a);b;c;d))"
        },
        {
          "right": "(+(a;b;c;d))",
          "left": "(+(a;+(b);c;d))"
        },
        {
          "right": "(+(a;b;c;d))",
          "left": "(+(a;b;+(c);d))"
        },
        {
          "right": "(+(a;b;c;d))",
          "left": "(+(a;b;c;+(d)))"
        },
        {
          "right": "(+(a;b;c;d;e))",
          "left": "(+(+(a);b;c;d;e))"
        },
        {
          "right": "(+(a;b;c;d;e))",
          "left": "(+(a;+(b);c;d;e))"
        },
        {
          "right": "(+(a;b;c;d;e))",
          "left": "(+(a;b;+(c);d;e))"
        },
        {
          "right": "(+(a;b;c;d;e))",
          "left": "(+(a;b;c;+(d);e))"
        },
        {
          "right": "(+(a;b;c;d;e))",
          "left": "(+(a;b;c;d;+(e)))"
        }
      ]
    },
    {
      "name": "ArithmeticMultiplicativeСommutativity",
      "type": "algebra",
      "rules": [
        {
          "left": "(*(a;b))",
          "right": "(*(b;a))"
        },
        {
          "left": "(*(A;*(B;C)))",
          "right": "(*(A;B;C))"
        },
        {
          "left": "(*(A;B;C))",
          "right": "(*(A;*(B;C)))"
        },
        {
          "left": "(*(A;*(B;C)))",
          "right": "(*(*(A;B);C))"
        },
        {
          "left": "(*(*(A;B);C))",
          "right": "(*(A;*(B;C)))"
        },
        {
          "left": "(*(*(A;B);C))",
          "right": "(*(A;B;C))"
        },
        {
          "left": "(*(A;B;C))",
          "right": "(*(*(A;B);C))"
        },
        {
          "left": "(*(A;B;C))",
          "right": "(*(A;C;B))"
        },
        {
          "left": "(*(A;B;C))",
          "right": "(*(B;A;C))"
        },
        {
          "left": "(*(A;B;C))",
          "right": "(*(C;A;B))"
        },
        {
          "left": "(*(*(A;B);*(C;D)))",
          "right": "(*(A;B;C;D))"
        },
        {
          "left": "(*(A;*(B;C;D)))",
          "right": "(*(A;B;C;D))"
        },
        {
          "left": "(*(A;B;C;D))",
          "right": "(*(A;*(B;C;D)))"
        },
        {
          "left": "(*(*(A;B;C);D))",
          "right": "(*(A;B;C;D))"
        },
        {
          "left": "(*(A;B;C;D))",
          "right": "(*(*(A;B;C);D))"
        },
        {
          "left": "(*(A;B;*(C;D)))",
          "right": "(*(A;B;C;D))"
        },
        {
          "left": "(*(A;B;C;D))",
          "right": "(*(A;B;*(C;D)))"
        },
        {
          "left": "(*(A;*(B;C);D))",
          "right": "(*(A;B;C;D))"
        },
        {
          "left": "(*(A;B;C;D))",
          "right": "(*(A;*(B;C);D))"
        },
        {
          "left": "(*(*(A;B);C;D))",
          "right": "(*(A;B;C;D))"
        },
        {
          "left": "(*(A;B;C;D))",
          "right": "(*(*(A;B);C;D))"
        },
        {
          "left": "(*(A;B;C;D))",
          "right": "(*(B;A;C;D))"
        },
        {
          "left": "(*(A;B;C;D))",
          "right": "(*(C;A;B;D))"
        },
        {
          "left": "(*(A;B;C;D))",
          "right": "(*(D;A;B;C))"
        },
        {
          "left": "(*(A;*(B;C;D;E)))",
          "right": "(*(A;B;C;D;E))"
        },
        {
          "left": "(*(A;B;C;D;E))",
          "right": "(*(A;*(B;C;D;E)))"
        },
        {
          "left": "(*(*(A;B;C;D);E))",
          "right": "(*(A;B;C;D;E))"
        },
        {
          "left": "(*(A;B;C;D;E))",
          "right": "(*(*(A;B;C;D);E))"
        },
        {
          "left": "(*(A;B;C;D;E))",
          "right": "(*(B;A;C;D;E))"
        },
        {
          "left": "(*(A;B;C;D;E))",
          "right": "(*(C;A;B;D;E))"
        },
        {
          "left": "(*(A;B;C;D;E))",
          "right": "(*(D;A;B;C;E))"
        },
        {
          "left": "(*(A;B;C;D;E))",
          "right": "(*(E;A;B;C;D))"
        }
      ]
    },
    {
      "name": "ArithmeticMinus",
      "type": "algebra",
      "rules": [
        {
          "left": "(+(-(+(-(a)))))",
          "right": "(a)"
        },
        {
          "left": "(-(+(-(a))))",
          "right": "(a)"
        },
        {
          "left": "(-(-(a)))",
          "right": "(a)"
        },
        {
          "left": "(b)",
          "right": "(+(-(+(-(b)))))"
        },
        {
          "left": "(+(a;-(0)))",
          "right": "(a)"
        },
        {
          "left": "(+(-(0);a))",
          "right": "(a)"
        },
        {
          "left": "(+(0;-(a)))",
          "right": "(+(-(a)))"
        },
        {
          "left": "(+(-(a);0))",
          "right": "(+(-(a)))"
        },
        {
          "left": "(+(a;-(a)))",
          "right": "(0)"
        },
        {
          "left": "(+(-(a);a))",
          "right": "(0)"
        },
        {
          "left": "(+(a;+(-(a))))",
          "right": "(0)"
        },
        {
          "left": "(+(+(-(a));a))",
          "right": "(0)"
        },
        {
          "left": "(0)",
          "right": "(+(1;-(1)))"
        },
        {
          "left": "(-(+(B;C)))",
          "right": "(+(-(B);-(C)))"
        },
        {
          "left": "(+(-(B);-(C)))",
          "right": "(-(+(B;C)))"
        },
        {
          "left": "(-(+(B;C;D)))",
          "right": "(+(-(B);-(C);-(D)))"
        },
        {
          "left": "(+(-(B);-(C);-(D)))",
          "right": "(-(+(B;C;D)))"
        },
        {
          "left": "(-(+(B;C;D;E)))",
          "right": "(+(-(B);-(C);-(D);-(E)))"
        },
        {
          "left": "(+(-(B);-(C);-(D);-(E)))",
          "right": "(-(+(B;C;D;E)))"
        },
        {
          "left": "(+(A;-(+(B;-(C)))))",
          "right": "(+(A;-(B);C))"
        },
        {
          "left": "(+(A;-(+(B;C))))",
          "right": "(+(A;-(B);-(C)))"
        },
        {
          "left": "(+(A;-(B);-(C)))",
          "right": "(+(A;-(+(B;C))))"
        },
        {
          "left": "(+(A;-(B);C))",
          "right": "(+(A;-(+(B;-(C)))))"
        },
        {
          "left": "(+(A;-(+(B;-(C);D))))",
          "right": "(+(A;-(B);C;-(D)))"
        },
        {
          "left": "(+(A;-(+(B;-(C);-(D)))))",
          "right": "(+(A;-(B);C;D))"
        },
        {
          "left": "(+(A;-(+(B;C;D))))",
          "right": "(+(A;-(B);-(C);-(D)))"
        },
        {
          "left": "(+(A;-(B);-(C);-(D)))",
          "right": "(+(A;-(+(B;C;D))))"
        },
        {
          "left": "(+(A;-(+(B;-(C)));D))",
          "right": "(+(A;-(B);C;D))"
        },
        {
          "left": "(+(A;-(+(B;C));D))",
          "right": "(+(A;-(B);-(C);D))"
        },
        {
          "left": "(+(A;-(B);-(C);D))",
          "right": "(+(A;-(+(B;C));D))"
        },
        {
          "left": "(+(A;-(+(B;C;D;E))))",
          "right": "(+(A;-(B);-(C);-(D);-(E)))"
        },
        {
          "left": "(+(A;-(B);-(C);-(D);-(E)))",
          "right": "(+(A;-(+(B;C;D;E))))"
        },
        {
          "left": "(+(A;-(+(B;C;D));E))",
          "right": "(+(A;-(B);-(C);-(D);E))"
        },
        {
          "left": "(+(A;-(B);-(C);-(D);E))",
          "right": "(+(A;-(+(B;C;D));E))"
        },
        {
          "left": "(+(A;C;-(A)))",
          "right": "(+(C))"
        },
        {
          "left": "(+(A;-(A);C))",
          "right": "(+(C))"
        },
        {
          "left": "(+(A;C;D;-(A)))",
          "right": "(+(C;D))"
        },
        {
          "left": "(+(A;C;-(A);D))",
          "right": "(+(C;D))"
        },
        {
          "left": "(+(A;-(A);C;D))",
          "right": "(+(C;D))"
        },
        {
          "left": "(+(A;C;D;E;-(A)))",
          "right": "(+(C;D;E))"
        },
        {
          "left": "(+(A;C;D;-(A);E))",
          "right": "(+(C;D;E))"
        },
        {
          "left": "(+(A;C;-(A);D;E))",
          "right": "(+(C;D;E))"
        },
        {
          "left": "(+(A;-(A);C;D;E))",
          "right": "(+(C;D;E))"
        }
      ]
    },
    {
      "name": "AdditiveToMultiplicative",
      "type": "algebra",
      "rules": [
        {
          "left": "(+(a;*(a;n)))",
          "right": "(*(a;+(n;1)))"
        },
        {
          "left": "(*(a;+(n;1)))",
          "right": "(+(a;*(a;n)))"
        },
        {
          "left": "(+(*(a;n);a))",
          "right": "(*(a;+(1;n)))"
        },
        {
          "left": "(*(a;+(1;n)))",
          "right": "(+(*(a;n);a))"
        }
      ]
    },
    {
      "name": "ArithmeticAssociativity",
      "type": "algebra",
      "rules": [
        {
          "left": "(*(A;+(B;C)))",
          "right": "(+(*(A;B);*(A;C)))"
        },
        {
          "left": "(*(+(B;C);A))",
          "right": "(+(*(B;A);*(C;A)))"
        },
        {
          "left": "(+(*(A;B);*(A;C)))",
          "right": "(*(A;+(B;C)))"
        },
        {
          "left": "(+(*(B;C);*(A;C)))",
          "right": "(*(+(B;A);C))"
        },
        {
          "left": "(*(A;+(B;C;D)))",
          "right": "(+(*(A;B);*(A;C);*(A;D)))"
        },
        {
          "left": "(+(*(A;B);*(A;C);*(A;D)))",
          "right": "(*(A;+(B;C;D)))"
        },
        {
          "left": "(*(+(B;C;D);A))",
          "right": "(+(*(B;A);*(C;A);*(D;A)))"
        },
        {
          "left": "(+(*(B;A);*(C;A);*(D;A)))",
          "right": "(*(+(B;C;D);A))"
        },
        {
          "left": "(*(A;+(B;C;D;E)))",
          "right": "(+(*(A;B);*(A;C);*(A;D);*(A;E)))"
        },
        {
          "left": "(+(*(A;B);*(A;C);*(A;D);*(A;E)))",
          "right": "(*(A;+(B;C;D;E)))"
        },
        {
          "left": "(*(+(B;C;D;E);A))",
          "right": "(+(*(B;A);*(C;A);*(D;A);*(E;A)))"
        },
        {
          "left": "(+(*(B;A);*(C;A);*(D;A);*(E;A)))",
          "right": "(*(+(B;C;D;E);A))"
        },
        {
          "left": "(*(A;+(B;-(C))))",
          "right": "(+(*(A;B);-(*(A;C))))"
        },
        {
          "left": "(*(+(B;-(A));C))",
          "right": "(+(*(B;C);-(*(A;C))))"
        },
        {
          "left": "(+(*(A;B);-(*(A;C))))",
          "right": "(*(A;+(B;-(C))))"
        },
        {
          "left": "(+(*(B;C);-(*(A;C))))",
          "right": "(*(+(B;-(A));C))"
        },
        {
          "left": "(+(/(B;C);/(A;C)))",
          "right": "(/(+(B;A);C))"
        },
        {
          "left": "(/(+(B;A);C))",
          "right": "(+(/(B;C);/(A;C)))"
        },
        {
          "left": "(+(/(B;C);-(/(A;C))))",
          "right": "(/(+(B;-(A));C))"
        },
        {
          "left": "(/(+(B;-(A));C))",
          "right": "(+(/(B;C);-(/(A;C))))"
        },
        {
          "left": "(-(*(A;C)))",
          "right": "(*(-(A);C))"
        },
        {
          "left": "(*(-(A);C))",
          "right": "(-(*(A;C)))"
        },
        {
          "left": "(-(*(A;C)))",
          "right": "(*(A;-(C)))"
        },
        {
          "left": "(*(A;-(C)))",
          "right": "(-(*(A;C)))"
        },
        {
          "left": "(*(A;-(C)))",
          "right": "(*(-(A);C))"
        },
        {
          "left": "(*(-(A);C))",
          "right": "(*(A;-(C)))"
        },
        {
          "left": "(-(/(A;C)))",
          "right": "(/(-(A);C))"
        },
        {
          "left": "(/(-(A);C))",
          "right": "(-(/(A;C)))"
        },
        {
          "left": "(-(/(A;C)))",
          "right": "(/(A;-(C)))"
        },
        {
          "left": "(/(A;-(C)))",
          "right": "(-(/(A;C)))"
        },
        {
          "left": "(/(A;-(C)))",
          "right": "(/(-(A);C))"
        },
        {
          "left": "(/(-(A);C))",
          "right": "(/(A;-(C)))"
        },
        {
          "left": "(+(-(*(A;C))))",
          "right": "(*(+(-(A));C))"
        },
        {
          "left": "(*(+(-(A));C))",
          "right": "(+(-(*(A;C))))"
        },
        {
          "left": "(+(-(*(A;C))))",
          "right": "(*(A;+(-(C))))"
        },
        {
          "left": "(*(A;+(-(C))))",
          "right": "(+(-(*(A;C))))"
        },
        {
          "left": "(*(A;+(-(C))))",
          "right": "(*(+(-(A));C))"
        },
        {
          "left": "(*(+(-(A));C))",
          "right": "(*(A;+(-(C))))"
        },
        {
          "left": "(+(-(/(A;C))))",
          "right": "(/(+(-(A));C))"
        },
        {
          "left": "(/(+(-(A));C))",
          "right": "(+(-(/(A;C))))"
        },
        {
          "left": "(+(-(/(A;C))))",
          "right": "(/(A;+(-(C))))"
        },
        {
          "left": "(/(A;+(-(C))))",
          "right": "(+(-(/(A;C))))"
        },
        {
          "left": "(/(A;+(-(C))))",
          "right": "(/(+(-(A));C))"
        },
        {
          "left": "(/(+(-(A));C))",
          "right": "(/(A;+(-(C))))"
        },
        {
          "left": "(*(-(A);-(B)))",
          "right": "(*(A;B))"
        },
        {
          "left": "(/(-(A);-(B)))",
          "right": "(/(A;B))"
        },
        {
          "left": "(*(A;B))",
          "right": "(*(+(-(A));+(-(B))))"
        },
        {
          "left": "(/(A;B))",
          "right": "(/(+(-(A));+(-(B))))"
        },
        {
          "left": "(*(+(-(A));+(-(B))))",
          "right": "(*(A;B))"
        },
        {
          "left": "(/(+(-(A));+(-(B))))",
          "right": "(/(A;B))"
        },
        {
          "left": "(+(/(B;C);/(A;D)))",
          "right": "(/(+(*(B;D);*(C;A));*(C;D)))"
        },
        {
          "left": "(+(/(B;C);-(/(A;D))))",
          "right": "(/(+(*(B;D);-(*(C;A)));*(C;D)))"
        },
        {
          "left": "(*(A;/(B;A)))",
          "right": "(B)"
        },
        {
          "left": "(*(/(B;A);A))",
          "right": "(B)"
        },
        {
          "left": "(*(A;/(B;C)))",
          "right": "(/(*(A;B);C))"
        },
        {
          "left": "(*(/(B;C);A))",
          "right": "(/(*(A;B);C))"
        },
        {
          "left": "(/(A;B))",
          "right": "(/(1;/(B;A)))"
        },
        {
          "left": "(/(*(A;B);C))",
          "right": "(*(A;/(B;C)))"
        },
        {
          "left": "(/(/(B;C);A))",
          "right": "(/(B;*(A;C)))"
        },
        {
          "left": "(/(B;*(A;C)))",
          "right": "(/(/(B;C);A))"
        },
        {
          "left": "(/(A;/(B;C)))",
          "right": "(/(*(A;C);B))"
        },
        {
          "left": "(/(*(A;C);B))",
          "right": "(/(A;/(B;C)))"
        },
        {
          "left": "(/(A;*(B;C)))",
          "right": "(*(/(A;B);/(1;C)))"
        },
        {
          "left": "(/(A;*(B;C)))",
          "right": "(*(/(1;B);/(A;C)))"
        },
        {
          "left": "(*(/(A;B);/(1;C)))",
          "right": "(/(A;*(B;C)))"
        },
        {
          "left": "(*(/(1;B);/(A;C)))",
          "right": "(/(A;*(B;C)))"
        },
        {
          "left": "(*(/(D;B);/(A;C)))",
          "right": "(/(*(D;A);*(B;C)))"
        },
        {
          "left": "(/(*(D;A);*(B;C)))",
          "right": "(*(/(D;B);/(A;C)))"
        },
        {
          "left": "(/(*(D;A);*(D;C)))",
          "right": "(/(A;C))"
        },
        {
          "left": "(/(*(D;A);D))",
          "right": "(A)"
        },
        {
          "left": "(/(*(A;D);D))",
          "right": "(A)"
        }
      ]
    },
    {
      "name": "ArithmeticDegree",
      "type": "algebra",
      "rules": [
        {
          "left": "(/(1;A))",
          "right": "(^(A;+(-(1))))"
        },
        {
          "left": "(^(A;+(-(1))))",
          "right": "(/(1;A))"
        },
        {
          "left": "(^(A;+(B;C)))",
          "right": "(*(^(A;B);^(A;C)))"
        },
        {
          "left": "(*(^(A;B);^(A;C)))",
          "right": "(^(A;+(B;C)))"
        },
        {
          "left": "(^(A;+(B;C;D)))",
          "right": "(*(^(A;B);^(A;C);^(A;D)))"
        },
        {
          "left": "(*(^(A;B);^(A;C);^(A;D)))",
          "right": "(^(A;+(B;C;D)))"
        },
        {
          "left": "(^(A;+(B;-(C))))",
          "right": "(/(^(A;B);^(A;C)))"
        },
        {
          "left": "(/(^(A;B);^(A;C)))",
          "right": "(^(A;+(B;-(C))))"
        },
        {
          "left": "(/(B;^(A;C)))",
          "right": "(*(B;^(A;+(-(C)))))"
        },
        {
          "left": "(*(B;^(A;+(-(C)))))",
          "right": "(/(B;^(A;C)))"
        },
        {
          "left": "(/(1;^(A;C)))",
          "right": "(^(A;+(-(C))))"
        },
        {
          "left": "(^(A;+(-(C))))",
          "right": "(/(1;^(A;C)))"
        },
        {
          "left": "(/(A;B))",
          "right": "(^(/(B;A);+(-(1))))"
        },
        {
          "left": "(^(/(B;A);+(-(1))))",
          "right": "(/(A;B))"
        },
        {
          "left": "(^(A;0))",
          "right": "(1)"
        },
        {
          "left": "(^(1;A))",
          "right": "(1)"
        },
        {
          "left": "(^(A;1))",
          "right": "(A)"
        },
        {
          "left": "(^(0;A))",
          "right": "(0)"
        },
        {
          "left": "(*(A;A))",
          "right": "(^(A;2))"
        },
        {
          "left": "(^(A;2))",
          "right": "(*(A;A))"
        },
        {
          "left": "(*(a;^(a;n)))",
          "right": "(^(a;+(n;1)))"
        },
        {
          "left": "(^(a;+(n;1)))",
          "right": "(*(a;^(a;n)))"
        },
        {
          "left": "(*(^(a;n);a))",
          "right": "(^(a;+(1;n)))"
        },
        {
          "left": "(^(a;+(1;n)))",
          "right": "(*(^(a;n);a))"
        },
        {
          "left": "(/(^(a;n);a))",
          "right": "(^(a;+(n;-(1))))"
        },
        {
          "left": "(^(a;+(n;-(1))))",
          "right": "(/(^(a;n);a))"
        },
        {
          "left": "(^(A;*(B;C)))",
          "right": "(^(^(A;B);C))"
        },
        {
          "left": "(^(^(A;B);C))",
          "right": "(^(A;*(B;C)))"
        },
        {
          "left": "(^(*(B;C);A))",
          "right": "(*(^(B;A);^(C;A)))"
        },
        {
          "left": "(*(^(B;A);^(C;A)))",
          "right": "(^(*(B;C);A))"
        },
        {
          "left": "(^(/(B;C);A))",
          "right": "(/(^(B;A);^(C;A)))"
        },
        {
          "left": "(/(^(B;A);^(C;A)))",
          "right": "(^(/(B;C);A))"
        },
        {
          "left": "(^(A;*(2;n)))",
          "right": "(^(-(A);*(2;n)))"
        },
        {
          "left": "(^(-(A);*(2;n)))",
          "right": "(^(A;*(2;n)))"
        },
        {
          "left": "(^(-(A);2))",
          "right": "(^(A;2))"
        },
        {
          "left": "(a)",
          "right": "(^(^(a;2);/(1;2)))"
        },
        {
          "left": "(a)",
          "right": "(^(^(a;3);/(1;3)))"
        },
        {
          "left": "(^(^(a;b);/(1;b)))",
          "right": "(a)"
        }
      ]
    },
    {
      "name": "ShortMultiplication",
      "type": "algebra",
      "rules": [
        {
          "left": "(+(^(a;2);-(^(b;2))))",
          "right": "(*(+(a;-(b));+(a;b)))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(*(+(a;-(b));+(a;b)))",
          "right": "(+(^(a;2);-(^(b;2))))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(^(+(a;b);2))",
          "right": "(+(^(a;2);*(2;a;b);^(b;2)))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(+(^(a;2);*(2;a;b);^(b;2)))",
          "right": "(^(+(a;b);2))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(^(+(a;-(b));2))",
          "right": "(+(^(a;2);-(*(2;a;b));^(b;2)))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(+(^(a;2);-(*(2;a;b));^(b;2)))",
          "right": "(^(+(a;-(b));2))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(^(+(a;b);3))",
          "right": "(+(^(a;3);*(3;^(a;2);b);*(3;a;^(b;2));^(b;3)))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(+(^(a;3);*(3;^(a;2);b);*(3;a;^(b;2));^(b;3)))",
          "right": "(^(+(a;b);3))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(^(+(a;-(b));3))",
          "right": "(+(^(a;3);-(*(3;^(a;2);b));*(3;a;^(b;2));-(^(b;3))))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(+(^(a;3);-(*(3;^(a;2);b));*(3;a;^(b;2));-(^(b;3))))",
          "right": "(^(+(a;-(b));3))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(+(^(a;3);-(^(b;3))))",
          "right": "(*(+(a;-(b));+(^(a;2);*(a;b);^(b;2))))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(*(+(a;-(b));+(^(a;2);*(a;b);^(b;2))))",
          "right": "(+(^(a;3);-(^(b;3))))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(+(^(a;3);^(b;3)))",
          "right": "(*(+(a;b);+(^(a;2);-(*(a;b));^(b;2))))",
          "matchJumbledAndNested": true
        },
        {
          "left": "(*(+(a;b);+(^(a;2);-(*(a;b));^(b;2))))",
          "right": "(+(^(a;3);^(b;3)))",
          "matchJumbledAndNested": true
        }
      ]
    },
    {
      "name": "Logarithm",
      "type": "algebra",
      "rules": [
        {
          "left": "(^(a;log(b;a)))",
          "right": "(b)"
        },
        {
          "left": "(log(1;A))",
          "right": "(0)"
        },
        {
          "left": "(log(A;A))",
          "right": "(1)"
        },
        {
          "left": "(log(*(b;c);a))",
          "right": "(+(log(b;a);log(c;a)))"
        },
        {
          "left": "(+(log(b;a);log(c;a)))",
          "right": "(log(*(b;c);a))"
        },
        {
          "left": "(log(*(b;c;d);a))",
          "right": "(+(log(b;a);log(c;a);log(d;a)))"
        },
        {
          "left": "(+(log(b;a);log(c;a);log(d;a)))",
          "right": "(log(*(b;c;d);a))"
        },
        {
          "left": "(log(*(b;c;d;e);a))",
          "right": "(+(log(b;a);log(c;a);log(d;a);log(e;a)))"
        },
        {
          "left": "(+(log(b;a);log(c;a);log(d;a);log(e;a)))",
          "right": "(log(*(b;c;d;e);a))"
        },
        {
          "left": "(log(/(b;c);a))",
          "right": "(+(log(b;a);-(log(c;a))))"
        },
        {
          "left": "(+(log(b;a);-(log(c;a))))",
          "right": "(log(/(b;c);a))"
        },
        {
          "left": "(log(^(b;c);a))",
          "right": "(*(c;log(b;a)))"
        },
        {
          "left": "(*(c;log(b;a)))",
          "right": "(log(^(b;c);a))"
        },
        {
          "left": "(*(log(b;a);c))",
          "right": "(log(^(b;c);a))"
        },
        {
          "left": "(log(b;^(a;k)))",
          "right": "(/(log(b;a);k))"
        },
        {
          "left": "(/(log(b;a);k))",
          "right": "(log(b;^(a;k)))"
        },
        {
          "left": "(/(1;log(b;a)))",
          "right": "(log(a;b))"
        },
        {
          "left": "(log(a;b))",
          "right": "(/(1;log(b;a)))"
        },
        {
          "left": "(/(log(c;a);log(b;a)))",
          "right": "(log(c;b))"
        },
        {
          "left": "(log(/(b;c);a))",
          "right": "(-(log(/(c;b);a)))"
        },
        {
          "left": "(-(log(/(c;b);a)))",
          "right": "(log(/(b;c);a))"
        },
        {
          "left": "(+(-(log(/(c;b);a))))",
          "right": "(log(/(b;c);a))"
        },
        {
          "left": "(log(b;a))",
          "right": "(-(log(/(1;b);a)))"
        },
        {
          "left": "(-(log(/(1;b);a)))",
          "right": "(log(b;a))"
        },
        {
          "left": "(+(-(log(/(1;b);a))))",
          "right": "(log(b;a))"
        },
        {
          "left": "(log(/(1;b);a))",
          "right": "(-(log(b;a)))"
        },
        {
          "left": "(-(log(b;a)))",
          "right": "(log(/(1;b);a))"
        },
        {
          "left": "(+(-(log(b;a))))",
          "right": "(log(/(1;b);a))"
        }
      ]
    }
  ]
}